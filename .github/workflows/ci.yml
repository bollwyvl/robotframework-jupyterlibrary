name: tests

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

env:
  INSTALL_ARTIFACT: wheel
  PIP_DISABLE_PIP_VERSION_CHECK: 1
  PYTHONIOENCODING: utf-8
  PYTHONUNBUFFERED: 1
  CI: 1

defaults:
  run:
    shell: bash -l {0}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: cache (conda)
        uses: actions/cache@v1
        with:
          path: ~/conda_pkgs_dir
          key:
            ${{ runner.os }}-conda-lint-${{ hashFiles('.github/locks/lint/linux-64/conda.lock') }}
          restore-keys: |
            ${{ runner.os }}-conda-lint-
      - uses: conda-incubator/setup-miniconda@v2
        with:
          activate-environment: lint
          auto-update-conda: true
          environment-file: .github/locks/lint/linux-64/conda.lock
          use-only-tar-bz2: true
      - run: conda list && conda info
      - run: doit lint build
      - run: cd dist && sha256sum * > SHA256SUMS && cat SHA256SUMS
      - uses: actions/upload-artifact@v2
        with:
          name: ${{ job.status }} dist ${{ github.run_number }}
          path: ./dist
        if: always()

  docs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: cache (conda)
        uses: actions/cache@v1
        with:
          path: ~/conda_pkgs_dir
          key:
            ${{ runner.os }}-conda-docs-${{ hashFiles('.github/locks/docs/linux-64/conda.lock') }}
          restore-keys: |
            ${{ runner.os }}-conda-docs-
      - uses: conda-incubator/setup-miniconda@v2
        with:
          activate-environment: docs
          auto-update-conda: true
          environment-file: .github/locks/docs/linux-64/conda.lock
          use-only-tar-bz2: true
      - run: doit docs
      - uses: actions/upload-artifact@v2
        with:
          name: ${{ job.status }} docs ${{ github.run_number }}
          path: ./build/docs/html
        if: always()

  test:
    runs-on: ${{ matrix.os }}-latest
    needs: [docs, build]
    strategy:
      fail-fast: false
      matrix:
        conda-subdir: [linux-64, osx-64, win-64]
        python-version: ["3.6", "3.7", "3.8", "3.9"]
        lab-version: ["1", "2"]
        include:
          - conda-subdir: linux-64
            os: ubuntu
          - conda-subdir: osx-64
            os: macos
          - conda-subdir: win-64
            os: windows
    steps:
      - run: git config --global core.autocrlf false
      - uses: actions/checkout@v2
      - id: lock
        run: |
          echo "::set-output name=file::${{
            format(
              '.github/locks/test/{0}/py{1}/lab{2}/conda.lock',
              matrix.conda-subdir,
              matrix.python-version,
              matrix.lab-version
            ) }}"
      - name: cache (conda)
        uses: actions/cache@v1
        with:
          path: ~/conda_pkgs_dir
          key:
            ${{ runner.os }}-conda-${{ matrix.python-version }}-${{ hashFiles(steps.lock.outputs.file) }}
          restore-keys: |
            ${{ runner.os }}-conda-${{ matrix.python-version }}-
      - uses: conda-incubator/setup-miniconda@v2
        with:
          activate-environment: test
          auto-update-conda: true
          environment-file: ${{ steps.lock.outputs.file }}
          use-only-tar-bz2: true
      - if: ${{ matrix.os != 'windows' }}
        run: doit test || doit test
      - if: ${{ matrix.os == 'windows' }}
        run: doit test || doit test
        shell: cmd /C CALL {0}
      - uses: actions/upload-artifact@v2
        with:
          name: ${{ job.status }} atest ${{ matrix.os }} py${{ matrix.python-version }} lab${{ matrix.lab-version }} ${{ github.run_number }}
          path: ./build/test/output
        if: always()
